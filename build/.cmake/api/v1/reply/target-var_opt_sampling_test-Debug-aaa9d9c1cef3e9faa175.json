{
	"artifacts" : 
	[
		{
			"path" : "sampling/test/var_opt_sampling_test"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"target_link_libraries",
			"add_compile_options",
			"target_compile_definitions",
			"target_sources"
		],
		"files" : 
		[
			"sampling/test/CMakeLists.txt",
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 21,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 23,
				"parent" : 0
			},
			{
				"file" : 1
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 55,
				"parent" : 3
			},
			{
				"command" : 2,
				"file" : 1,
				"line" : 59,
				"parent" : 3
			},
			{
				"command" : 3,
				"file" : 0,
				"line" : 31,
				"parent" : 0
			},
			{
				"command" : 4,
				"file" : 0,
				"line" : 41,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g -fPIE"
				},
				{
					"backtrace" : 4,
					"fragment" : "-Wall"
				},
				{
					"backtrace" : 4,
					"fragment" : "-pedantic"
				},
				{
					"backtrace" : 4,
					"fragment" : "-W"
				},
				{
					"backtrace" : 4,
					"fragment" : "-Wextra"
				},
				{
					"backtrace" : 5,
					"fragment" : "-Wimplicit-fallthrough=3"
				},
				{
					"fragment" : "-std=c++11"
				}
			],
			"defines" : 
			[
				{
					"backtrace" : 6,
					"define" : "TEST_BINARY_INPUT_PATH=\"/home/rui/datasketches/github/OnvhllTest/sampling/test/\""
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 2,
					"path" : "/home/rui/datasketches/github/OnvhllTest/sampling/include"
				},
				{
					"backtrace" : 2,
					"path" : "/home/rui/datasketches/github/OnvhllTest/common/include"
				},
				{
					"backtrace" : 2,
					"path" : "/home/rui/datasketches/github/OnvhllTest/common/test"
				},
				{
					"backtrace" : 2,
					"path" : "/home/rui/datasketches/github/OnvhllTest/build/_deps/catch2-src/single_include"
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2,
					2
				],
				"standard" : "11"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2
			]
		}
	],
	"dependencies" : 
	[
		{
			"backtrace" : 2,
			"id" : "common_test_lib::@64cb0f958755a3ad88fa"
		}
	],
	"id" : "var_opt_sampling_test::@f496dee21990333c5246",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			}
		],
		"language" : "CXX"
	},
	"name" : "var_opt_sampling_test",
	"nameOnDisk" : "var_opt_sampling_test",
	"paths" : 
	{
		"build" : "sampling/test",
		"source" : "sampling/test"
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				3,
				4
			]
		},
		{
			"name" : "Object Libraries",
			"sourceIndexes" : 
			[
				5,
				6
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 7,
			"compileGroupIndex" : 0,
			"path" : "sampling/test/var_opt_sketch_test.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 7,
			"compileGroupIndex" : 0,
			"path" : "sampling/test/var_opt_union_test.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 7,
			"compileGroupIndex" : 0,
			"path" : "sampling/test/var_opt_allocation_test.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 2,
			"path" : "common/test/test_allocator.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 2,
			"path" : "common/test/test_type.hpp",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 2,
			"isGenerated" : true,
			"path" : "build/common/test/CMakeFiles/common_test_lib.dir/catch_runner.cpp.o",
			"sourceGroupIndex" : 2
		},
		{
			"backtrace" : 2,
			"isGenerated" : true,
			"path" : "build/common/test/CMakeFiles/common_test_lib.dir/test_allocator.cpp.o",
			"sourceGroupIndex" : 2
		}
	],
	"type" : "EXECUTABLE"
}
